{"mappings":"YAAA,IAAuBA,EAAUC,EACzBC,GADeF,EAcT,EAdmBC,EAchB,IAbTC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,aAAY,WACNN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KAMJQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACfU,YAAW,WACTC,QAAQC,IAAI,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,GAC1DA,E,IAILc,OAAM,SAAAL,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAClBW,QAAQC,IAAI,sBAAqCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\ncreatePromise(2, 1000)\n  .then(({ position, delay }) => {\n      setTimeout(() => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);      \n      },delay)  \n  })\n\n\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["position","delay","shouldResolve","Math","random","Promise","resolve","reject","setInterval","then","param","setTimeout","console","log","concat","catch"],"version":3,"file":"03-promises.1d8ddf8d.js.map"}